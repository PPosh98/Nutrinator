const e={allNutrition:[],userNutrition:{},mealsNutrition:[],totalNutrition:{},meals:{selectedMeals:[],unselectedMeals:[],id:0},ingredientList:[]},t={calories:"",protein:"",fat:"",carbohydrates:"",fiber:"",sugar:"",sodium:"",cholesterol:"",iron:"",potassium:"",calcium:"",vitamin_d:""},n=function(t){const n=t.split("&"),a=Number(n[0].substring(3));let i=e.meals.selectedMeals.findIndex((e=>e.id===a));-1!==i?e.meals.unselectedMeals.push(...e.meals.selectedMeals.splice(i,1)):(i=e.meals.unselectedMeals.findIndex((e=>e.id===a)),e.meals.selectedMeals.push(...e.meals.unselectedMeals.splice(i,1))),s()},a=function(){localStorage.setItem("userNutrition",JSON.stringify(e.userNutrition))},s=function(){localStorage.setItem("meals",JSON.stringify(e.meals))},i=function(e,t){return e.sort(((e,n)=>e[t].localeCompare(n[t]))).reduce(((e,n)=>{const a=e;return e.length&&e[e.length-1][t]===n[t]?a[e.length-1]={...e[e.length-1],...n,amount:e[e.length-1].amount+n.amount}:a[e.length]=n,a}),[])};!function(){const t=localStorage.getItem("userNutrition");t&&(e.userNutrition=JSON.parse(t));const n=localStorage.getItem("meals");n&&(e.meals=JSON.parse(n))}();class r{#e;render(e){if(!e||Array.isArray(e)&&0===e.length)return this.renderError();this.setData(e);const t=this.getMarkup();this.clear(),this.getParentElement().insertAdjacentHTML("afterbegin",t)}update(e){this.setData(e);const t=this.getMarkup(),n=document.createRange().createContextualFragment(t),a=Array.from(n.querySelectorAll("*")),s=Array.from(this.getParentElement().querySelectorAll("*"));a.forEach(((e,t)=>{const n=s[t];e.isEqualNode(n)||""===e.firstChild?.nodeValue.trim()||(n.textContent=e.textContent),e.isEqualNode(n)||Array.from(e.attributes).forEach((e=>n.setAttribute(e.name,e.value)))}))}clear(){this.getParentElement().innerHTML=""}renderSpinner(){}renderError(e=this.getErrorMessage()){const t=`<p>${e}</p>`;this.clear(),this.getParentElement().insertAdjacentHTML("afterbegin",t)}renderMessage(e=this.getMessage()){const t=`\n      <p>${e}</p>\n    `;this.getMessageDiv().innerHTML=t,this.getMessageDiv().classList.toggle("hidden"),setTimeout((()=>{this.getMessageDiv().classList.toggle("hidden")}),3e3)}setData(e){this.#e=e}getData(){return this.#e}}var l=new class extends r{#t="You don't have any meals here, create one now by clicking the 'Create Meal' button!";#n=document.getElementById("views");constructor(){super(),this.getParentElement().innerHTML=this.getMarkup()}addHandlerRender(e){window.addEventListener("load",e)}addHandlerGetNutrition(e){document.getElementById("btn-nutritionalise").addEventListener("click",e)}addHandlerControls(e){document.getElementById("meals").addEventListener("click",(function(t){t.target.classList.contains("meal-icon")&&e(t.target.id,t.target.closest("div .meal").dataset.meal)}))}#a(){return'\n      <div id="my-meals-view">\n        <div id="greetings-section">\n          <h1 id="greeting">Hi, welcome!</h1>\n          <span\n            >Begin by entering your calories requirement by clicking the Edit button, then create\n            some meals and finally get their nutritional data by hitting the\n            NUTRITIONALISE button!\n          </span>\n        </div>\n        <div id="calories-section">\n          <p>My calories requirement:</p>\n          <div id="calories"></div>\n          <button id="btn-edit" class="btn-submit">Edit</button>\n        </div>\n        <div id="meals">\n          <div id="selected-meals-section">\n            <span id="header-selected-meals"><b>Selected Meals</b></span>\n            <button id="btn-nutritionalise" class="btn-submit">NUTRITIONALISE</button>\n            <button id="btn-create-meal" class="btn-submit">Create Meal</button>\n            <hr class="horizontal-lines" />\n            <div id="selected-meals"></div>\n          </div>\n          <div id="meals-repo-section">\n            <span id="header-meals-repo"><b>Meals Repository</b></span>\n            <hr class="horizontal-lines" />\n            <div id="meals-repo"></div>\n          </div>\n        </div>\n      </div>'}getMarkup(){return this.#a()}getParentElement(){return this.#n}getErrorMessage(){return this.#t}};class d extends r{#n=document.getElementById("form-create-meal");#s="Meal was created successfully! ðŸ¥³";#i=document.getElementById("create-meal-window");#r=document.getElementById("overlay-create");#l=document.getElementById("btn-create-meal");#d=document.getElementById("btn-close-create");#o=document.getElementById("message-create");#c=document.getElementById("meal-name-create");#u=document.getElementById("servings-create");#m=document.getElementById("ingredients-create");#g;static mealId=0;constructor(){super(),this.#h(),this.#p()}toggleWindow(){this.#r.classList.toggle("hidden"),this.#i.classList.toggle("hidden")}#h(){this.#l.addEventListener("click",this.toggleWindow.bind(this))}#p(){this.#d.addEventListener("click",this.toggleWindow.bind(this)),this.#r.addEventListener("click",this.toggleWindow.bind(this))}addHandlerCreateMeal(e){this.getParentElement().addEventListener("submit",(t=>{t.preventDefault();const n=new FormData(this.getParentElement()),a=new URLSearchParams;for(const e of n)a.append(e[0],e[1]);this.#g=`id=${d.mealId++}&${a.toString()}`;const s=this.#g.split("&");e(s,this.#g),this.#m.value="",this.#c.value="",this.#u.value=""}))}getParentElement(){return this.#n}getMessage(){return this.#s}getMessageDiv(){return this.#o}}var o=new class extends r{#n=document.getElementById("form-update-meal");#s="Meal was updated successfully! ðŸŽ‰";#i=document.getElementById("update-meal-window");#r=document.getElementById("overlay-update");#d=document.getElementById("btn-close-update");#c=document.getElementById("meal-name-update");#u=document.getElementById("servings-update");#m=document.getElementById("ingredients-update");#o=document.getElementById("message-update");#g;#M;constructor(){super(),this.#p()}openWindow(e){const t=e.split("&");this.#M=Number(t[0].substring(3));const n=t[1].substring(10).replaceAll("+"," "),a=Number(t[2].substring(14)),s=t[3].substring(17).split("%0A");this.toggleWindow();const i=s.map((e=>e.replaceAll("+"," "))).join("\n");this.#m.value=i,this.#c.value=n,this.#u.value=a}toggleWindow(){this.#r.classList.toggle("hidden"),this.#i.classList.toggle("hidden")}#p(){this.#d.addEventListener("click",this.toggleWindow.bind(this)),this.#r.addEventListener("click",this.toggleWindow.bind(this))}addHandlerUpdateMeal(e){this.getParentElement().addEventListener("submit",(t=>{t.preventDefault();const n=new FormData(this.getParentElement()),a=new URLSearchParams;for(const e of n)a.append(e[0],e[1]);this.#g=`id=${this.#M}&${a.toString()}`,e(this.#g)}))}getParentElement(){return this.#n}getMessage(){return this.#s}getMessageDiv(){return this.#o}};var c=new class extends r{#n=document.getElementById("selected-meals");#t="You don't have any meals here, add one from the repository below or create one now by clicking the 'Create Meal' button!";#a(){return this.getData().map((e=>(this.setData(e),this.getMealMarkup()))).join("")}getMarkup(){return this.#a()}#v(){return`\n      <div class="meal" data-meal="${this.getData().searchParamsStr}">\n        <span class="meal-name">${this.getData().mealName}</span>\n        <div id="meal-icons">\n          <img\n            id="meal-edit"\n            class="meal-icon"\n            src="src/img/icons/edit.png"\n            alt="edit"\n            title="Edit Meal"\n          />\n          <img\n            id="meal-bin"\n            class="meal-icon"\n            src="src/img/icons/bin.png"\n            alt="bin"\n            title="Delete Meal"\n          />\n          <img\n            id="meal-remove"\n            class="meal-icon"\n            src="src/img/icons/minus.png"\n            alt="remove"\n            title="Move to Meals Repository"\n          />\n        </div>\n      </div>`}getMealMarkup(){return this.#v()}getParentElement(){return this.#n}getErrorMessage(){return this.#t}};var u=new class extends r{#n=document.getElementById("meals-repo");#t="No meals to be found here...";#a(){return this.getData().map((e=>(this.setData(e),this.getMealMarkup()))).join("")}getMarkup(){return this.#a()}#v(){return`\n      <div class="meal" data-meal="${this.getData().searchParamsStr}">\n        <span class="meal-name">${this.getData().mealName}</span>\n        <div id="meal-icons">\n          <img\n            id="meal-edit"\n            class="meal-icon"\n            src="src/img/icons/edit.png"\n            alt="edit"\n            title="Edit Meal"\n          />\n          <img\n            id="meal-bin"\n            class="meal-icon"\n            src="src/img/icons/bin.png"\n            alt="bin"\n            title="Delete Meal"\n          />\n          <img\n            id="meal-add"\n            class="meal-icon"\n            src="src/img/icons/add.png"\n            alt="add"\n            title="Add to Selected Meals"\n          />\n        </div>\n      </div>`}getMealMarkup(){return this.#v()}getParentElement(){return this.#n}getErrorMessage(){return this.#t}};var m=new class extends r{#t="You don't have any meals here, create one now by clicking the 'Create Meal' button!";#n=document.getElementById("views");constructor(){super(),this.drawChart()}drawChart(){google.charts.load("current",{packages:["corechart"]}),google.charts.setOnLoadCallback((function(){var e=google.visualization.arrayToDataTable([["Task","Hours per Day"],["Work",11]]);new google.visualization.PieChart(document.getElementById("donutchart1")).draw(e,{pieHole:.7,backgroundColor:"white",chartArea:{width:170,height:170},width:200,height:200,legend:{position:"top",alignment:"center"}}),new google.visualization.PieChart(document.getElementById("donutchart2")).draw(e,{pieHole:.7,backgroundColor:"white",chartArea:{width:170,height:170},width:200,height:200,legend:{position:"top",alignment:"center"}})}))}#a(){return`\n\t\t\t<div id="results-view">\n\t\t\t\t<div id="charts">\n\t\t\t\t\t<div id="donutchart1" class="chart"></div>\n\t\t\t\t\t<div id="donutchart2" class="chart"></div>\n\t\t\t\t</div>\n\t\t\t\t<h2 id="header-nutrition-table">Table of Nutrition</h3>\n\t\t\t\t<table id="nutrition-table">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>You Require</th>\n\t\t\t\t\t\t\t<th>Nutrient(unit)</th>\n\t\t\t\t\t\t\t<th>You Consume</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n            ${this.getData().map(this.#b).join("")}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t<button class="btn-submit">Select Other Meal(s)</button>\n\t\t\t</div>`}getMarkup(){return this.#a()}#b(e){return`\n      <tr>\n        <td>${e.userReqAmount}</td>\n        <td>${e.nutrient}(${e.unit})</td>\n        <td>${e.mealsAmount}</td>\n      </tr>`}getParentElement(){return this.#n}getErrorMessage(){return this.#t}};var g=new class extends r{#n=document.getElementById("calories");#t="NA";#a(){return`\n\t\t\t<h1 id="calories-value">${this.getData()}<span id="kcal">kcal</span></h1>`}getMarkup(){return this.#a()}getParentElement(){return this.#n}getErrorMessage(){return this.#t}};var h=new class extends r{#n=document.getElementById("form-save-calories");#s="Calories saved successfully! ðŸŽˆ";#i=document.getElementById("calories-window");#r=document.getElementById("overlay-calories");#l=document.getElementById("btn-edit");#d=document.getElementById("btn-close-calories");#o=document.getElementById("message-save");constructor(){super(),this.#h(),this.#p()}toggleWindow(){this.#r.classList.toggle("hidden"),this.#i.classList.toggle("hidden")}#h(){this.#l.addEventListener("click",this.toggleWindow.bind(this))}#p(){this.#d.addEventListener("click",this.toggleWindow.bind(this)),this.#r.addEventListener("click",this.toggleWindow.bind(this))}addHandlerAddCalories(e){this.#n.addEventListener("submit",(t=>{t.preventDefault();const n=document.getElementById("input-calories").value;e(Number(n)),document.getElementById("calories-value").innerHTML=`${n}<span id="kcal">kcal</span>`}))}getMessage(){return this.#s}getMessageDiv(){return this.#o}};const p=new d,M=function(t){!function(t){const n=(.1*t/4).toFixed(2),s=(.35*t/4).toFixed(2);console.log("Protein: "+n+"-"+s);const i=(.014*t).toFixed(2);console.log("Fibre: "+i);const r=(.3*t/9).toFixed(2);console.log("Fat: "+r);const l=(.45*t/4).toFixed(2),d=(.65*t/4).toFixed(2);console.log("Carbs: "+l+"-"+d),e.userNutrition={calories:t,protein:`${n}-${s}`,fat:r,carbohydrates:`${l}-${d}`,fiber:`${i}^`,sugar:"30*",sodium:"500-2300",cholesterol:"200*",iron:"8.7-14.8~",potassium:"3500-4700",calcium:"700-1300",vitamin_d:"25-50"},a()}(t),h.renderMessage()},v=function(){g.render(e.userNutrition.calories),f(),d.mealId=e.meals.id},b=function(t,n){!function(t,n){e.meals.selectedMeals.push({id:Number(t[0].substring(3)),mealName:t[1].substring(10).replaceAll("+"," "),servings:Number(t[2].substring(14)),ingredientList:t[3].substring(17).split("%0A"),searchParamsStr:n}),e.meals.id=e.meals.selectedMeals.at(-1).id+1,s()}(t,n),p.renderMessage(),f()},E=async function(){await async function(){try{e.ingredientList=[],e.meals.selectedMeals.forEach((function(t){t.ingredientList.forEach((function(n){let a=n.split("+");a.splice(0,1,String(Number(a[0])/t.servings)),e.ingredientList.push(a.join("+"))})),console.log(e.ingredientList)}));const n=`ingredientList=${e.ingredientList.join("%0A")}`,a=await fetch("https://api.spoonacular.com/recipes/parseIngredients?includeNutrition=true&apiKey=6079577d1f3348e2a518bb9972c92fa7",{method:"POST",body:n}),s=await a.json();s.forEach((function(n){n.nutrition.nutrients.forEach((function(n){Object.hasOwn(t,n.name.toLowerCase().replace(" ","_"))&&e.mealsNutrition.push(n)}))})),console.log(e.mealsNutrition),e.totalNutrition=i(e.mealsNutrition,"name"),console.log(e.totalNutrition),e.allNutrition=e.totalNutrition.map((t=>({nutrient:t.name,unit:t.unit,mealsAmount:t.amount.toFixed(2),userReqAmount:e.userNutrition[t.name.toLowerCase().replace(" ","_")]}))),console.log(e.allNutrition),console.log(s)}catch(e){alert(e)}}(),m.render(e.allNutrition)},w=function(t,a){const i={"meal-edit":()=>{o.openWindow(a)},"meal-bin":()=>function(t){const n=t.split("&"),a=Number(n[0].substring(3));let i=e.meals.selectedMeals.findIndex((e=>e.id===a));-1!==i?e.meals.selectedMeals.splice(i,1):(i=e.meals.unselectedMeals.findIndex((e=>e.id===a)),e.meals.unselectedMeals.splice(i,1)),s()}(a),"meal-remove":()=>n(a),"meal-add":()=>n(a)};i[t](),f()},y=function(t){!function(t){const n=t.split("&"),a=n[1].substring(10).replaceAll("+"," "),i=Number(n[2].substring(14)),r=n[3].substring(17).split("%0A"),l=Number(n[0].substring(3));let d=e.meals.selectedMeals.findIndex((e=>e.id===l));-1!==d?(e.meals.selectedMeals.at(d).mealName=a,e.meals.selectedMeals.at(d).servings=i,e.meals.selectedMeals.at(d).ingredientList=r,e.meals.selectedMeals.at(d).searchParamsStr=t):(d=e.meals.unselectedMeals.findIndex((e=>e.id===l)),e.meals.unselectedMeals.at(d).mealName=a,e.meals.unselectedMeals.at(d).servings=i,e.meals.unselectedMeals.at(d).ingredientList=r,e.meals.unselectedMeals.at(d).searchParamsStr=t),s()}(t),o.renderMessage(),f()},f=function(){c.render(e.meals.selectedMeals),u.render(e.meals.unselectedMeals)};l.addHandlerRender(v),l.addHandlerGetNutrition(E),h.addHandlerAddCalories(M),l.addHandlerControls(w),o.addHandlerUpdateMeal(y),p.addHandlerCreateMeal(b);
//# sourceMappingURL=index.46054f1f.js.map
